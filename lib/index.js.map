{"version":3,"file":"index.js","sources":["../src/utils/fetch.ts","../src/utils/no_image_detector.ts","../src/utils/mal_images.ts","../src/utils/parse_number.ts","../src/api/search.ts","../src/api/tags.ts","../src/api/advancedSearch.ts","../src/api/anime.ts","../src/utils/mpaa.ts","../src/utils/date.ts","../src/api/episodes.ts","../src/api/players.ts","../src/api/regularSearch.ts","../src/api/video.ts","../src/utils/wait.ts"],"sourcesContent":["import { default as fetch } from \"node-fetch\";\n// without those it won't work\nconst headers = {\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\",\n    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"Cookie\": \"cb-rodo=enabled;\",\n    \"Accept-Language\": \"pl-PL,pl;q=0.9,en-US;q=0.8,en,q=0.7\"\n};\nexport async function fetchFromShinden(url) {\n    const response = await fetch(url, { headers });\n    if (!response.ok)\n        throw new Error(response.statusText);\n    const html_string = await response.text();\n    return html_string;\n}\n","import { searchImageMal } from \"./mal_images\";\nexport default function noImageDetector(url) {\n    if (url.includes(\"/res/other\"))\n        return \"\";\n    if (url.includes(\"javascript:\"))\n        return \"\";\n    return url;\n}\nexport const areTagsNsfw = (tags) => tags.map(t => t.toUpperCase())\n    .some(t => t === \"HENTAI\" ||\n    t === \"YAOI\" ||\n    t === \"YURI\");\nexport async function fixImageUrl(image_url, title, nsfw) {\n    if (!nsfw) {\n        if (!image_url) {\n            image_url = await searchImageMal(title);\n        }\n        else {\n            image_url = \"https://shinden.pl\" + image_url;\n        }\n    }\n    else\n        image_url = \"https://i.ebayimg.com/images/i/252339513231-0-1/s-l1000.jpg\";\n    return image_url;\n}\n","import { load } from \"cheerio\";\nimport fetch from \"node-fetch\";\n// if shinden won't provide any images i scrape them from myanimelist\nexport async function searchImageMal(term) {\n    // %20 * 3 is because search queries shorter than 3 characters throw an error\n    const res = await fetch(`https://myanimelist.net/search/all?q=${term}%20%20%20`);\n    const html = await res.text();\n    const $ = load(html);\n    const src = $(\"article img\")\n        ?.attr(\"data-src\")\n        ?.replace(/\\?.+/, \"\")\n        ?.replace(/\\/r\\/\\d+x\\d+/, \"\") || \"\";\n    return src;\n}\n","export default function parseNumber(input) {\n    const str = input.replace(/,/, \".\");\n    const n = parseFloat(str);\n    return isNaN(n) ? 0 : n;\n}\n","import { load } from \"cheerio\";\nimport { fetchFromShinden } from \"../utils/fetch\";\nimport noImageDetector, { areTagsNsfw, fixImageUrl } from \"../utils/no_image_detector\";\nimport parseNumber from \"../utils/parse_number\";\nexport async function scrapeSearchShinden(url) {\n    const html = await fetchFromShinden(url);\n    const index = html.indexOf(\"<article>\");\n    const index2 = html.lastIndexOf(\"</article>\");\n    const $ = load(html.substring(index + 9, index2));\n    /**\n     * Why the FUCK cheerio is not letting me do this with async\n     * now i have to do this shit with promise Array\n     */\n    const promiseArray = [];\n    $(\".div-row\").each(function () {\n        const $item = $(this);\n        promiseArray.push(new Promise(async (resolve) => {\n            const title = $item.find(\"h3>a\").text();\n            const tags = $item.find(\".tags\").text().split(\"\\n\").filter(i => i);\n            let image_url = noImageDetector($item.find(\".cover-col>a\").attr(\"href\") || \"\");\n            const nsfw = areTagsNsfw(tags);\n            image_url = await fixImageUrl(image_url, title, nsfw);\n            resolve({\n                title,\n                link: $item.find(\"h3>a\").attr('href') || \"\",\n                image_url,\n                tags,\n                type: $item.find(\".title-kind-col\").text(),\n                episodes: $item.find(\".episodes-col\").attr(\"title\") || \"\",\n                grade: parseNumber($item.find(\".rate-top\").text() || \"0\"),\n            });\n        }));\n    });\n    const list = await Promise.all(promiseArray);\n    return list;\n}\n","const genres = [[\"Akcja\", 5], [\"Cyberpunk\", 106], [\"Dramat\", 8], [\"Ecchi\", 78], [\"Eksperymentalne\", 1741], [\"Fantasy\", 22], [\"Harem\", 130], [\"Hentai\", 234], [\"Historyczne\", 92], [\"Horror\", 51], [\"Komedia\", 7], [\"Kryminalne\", 20], [\"Magia\", 18], [\"Mecha\", 98], [\"Męski harem\", 263], [\"Muzyczne\", 136], [\"Nadprzyrodzone\", 19], [\"Obłęd\", 97], [\"Okruchy życia\", 42], [\"Parodia\", 165], [\"Przygodowe\", 6], [\"Psychologiczne\", 52], [\"Romans\", 2672], [\"Romans (do rozdzielenia)\", 38], [\"Sci-Fi\", 549], [\"Shoujo-ai\", 167], [\"Shounen-ai\", 207], [\"Space opera\", 384], [\"Sportowe\", 31], [\"Steampunk\", 1734], [\"Szkolne\", 65], [\"Sztuki walki\", 57], [\"Tajemnica\", 12], [\"Thriller\", 53], [\"Wojskowe\", 93], [\"Yaoi\", 364], [\"Yuri\", 380]];\nconst target = [[\"Dla dzieci\", 218], [\"Josei\", 39], [\"Seinen\", 48], [\"Shoujo\", 128], [\"Shounen\", 23]];\nconst characters = [[\"Aktorzy\", 2329], [\"Albinos\", 2656], [\"Androidy\", 1758], [\"Anioły\", 1055], [\"Artyści\", 1779], [\"Arystokracja\", 1781], [\"Bishoujo\", 576], [\"Bishounen\", 1723], [\"Bóstwa\", 1805], [\"Chibi\", 569], [\"Chuunibyou\", 1842], [\"Cyborgi\", 1726], [\"Czarodzieje\", 1922], [\"Dandere/Kuudere\", 1783], [\"Delikwenci\", 2347], [\"Demony\", 104], [\"Dere-Dere\", 2174], [\"Detektywi\", 256], [\"Doktor\", 2217], [\"Dorośli\", 1760], [\"Duchy\", 1731], [\"Dzieci\", 1737], [\"Egzorcyści\", 1804], [\"Elfy\", 1762], [\"Futanari\", 2116], [\"GAR\", 1797], [\"Geniusz\", 2755], [\"Genki\", 2213], [\"Gracze\", 2325], [\"Gyaru\", 1807], [\"Heterochromia\", 2681], [\"Hikikomori\", 2308], [\"Hybryda\", 2146], [\"Idole\", 352], [\"Imouto\", 1787], [\"Insekty\", 2356], [\"Kapłani\", 1780], [\"Kemonomimi\", 1742], [\"Kitsune\", 2373], [\"Kosmici\", 421], [\"Koty\", 594], [\"Lokaje\", 1232], [\"Loli\", 296], [\"Magiczne\", 1800], [\"Mahou shoujo\", 173], [\"Mayadere\", 2005], [\"Meganekko\", 2214], [\"Moe\", 519], [\"Morderca\", 1902], [\"Mówiące zwierzęta\", 1905], [\"Młodzież\", 2226], [\"Najemnicy\", 1916], [\"Nauczyciele\", 1820], [\"NEET\", 2190], [\"Nekomata\", 2650], [\"Niewolnicy\", 2180], [\"Ninja\", 59], [\"Ochroniarz\", 2338], [\"OP postać\", 2264], [\"Otaku\", 260], [\"Otouto\", 2306], [\"Piraci\", 62], [\"Pokojówki\", 1747], [\"Policjanci\", 2222], [\"Potwory\", 1727], [\"Pracownicy biurowi\", 1782], [\"Przestępcy\", 1778], [\"Roboty\", 1733], [\"Rycerze\", 1923], [\"Samuraje\", 108], [\"Shinigami\", 269], [\"Sieroty\", 2364], [\"Slime\", 2751], [\"Smoki\", 1725], [\"Studenci\", 1875], [\"Superbohaterzy\", 2369], [\"Syreny\", 496], [\"Szpiedzy\", 2181], [\"Tengu\", 2626], [\"Transwestyta\", 2254], [\"Tsundere\", 1759], [\"Uczniowie\", 1819], [\"Wampiry\", 83], [\"Wiedźmy\", 1728], [\"Wilkołaki\", 2044], [\"Wróżki\", 387], [\"Władca Demonów\", 2383], [\"Yandere/Yangire\", 1755], [\"Youkai\", 1744], [\"Zamiana płci\", 956], [\"Zombie\", 1075], [\"Żołnierze\", 2157], [\"Zwierzęta\", 2632], [\"Łowcy nagród\", 1761]];\nconst time_place = [[\"Alternatywna Ziemia\", 2328], [\"Ameryka Północna\", 1789], [\"Budynek mieszkalny\", 2336], [\"Chiny\", 1949], [\"Dungeon\", 2663], [\"Dystopia\", 2348], [\"Europa\", 1745], [\"Feudalna Japonia\", 1730], [\"Jak gra\", 2322], [\"Jak średniowiecze\", 2362], [\"Japonia\", 1740], [\"kawiarnia/restauracja/bar/sklep\", 2341], [\"Kosmos\", 10], [\"Miasto\", 1785], [\"Ocean\", 2363], [\"Podróż\", 1788], [\"Postapokaliptyczne\", 470], [\"Przyszłość\", 2326], [\"Świat alternatywny\", 2327], [\"Szkoła dla chłopców\", 2333], [\"Szkoła dla dziewcząt\", 2332], [\"W grze / VR\", 1729], [\"Wieś\", 1784], [\"Współczesność\", 1739], [\"Wyspy\", 2357]];\nconst other = [[\"Alchemia\", 450], [\"Amnezja\", 1901], [\"Bejsbol\", 506], [\"Boks\", 67], [\"Broń Palna\", 2155], [\"Buddyzm\", 2361], [\"Choroba\", 2355], [\"Crossdressing\", 2346], [\"Death Game\", 1933], [\"Dzielenie ciała\", 2339], [\"Edukacyjne\", 558], [\"Ekonomia\", 1763], [\"Eksperymenty na ludziach\", 2354], [\"Fantastyka współczesna\", 2345], [\"Gildie\", 2351], [\"Gimnastyka\", 2714], [\"Gore\", 2050], [\"Gra o wysoką stawkę\", 2377], [\"Gry karciane\", 1904], [\"Hazard\", 2350], [\"Isekai\", 2376], [\"Iyashikei\", 2358], [\"Kanibalizm\", 2739], [\"Kazirodztwo\", 383], [\"Kendo\", 554], [\"Klub szkolny\", 2765], [\"Kolarstwo\", 1947], [\"Koszykówka\", 225], [\"Kulinaria\", 1803], [\"Lotnictwo\", 1749], [\"Mafia\", 513], [\"Mahjong\", 357], [\"Manipulacja czasem i przestrzenią\", 1840], [\"Mitologia chrześcijańska\", 2360], [\"Mitologia japońska\", 2359], [\"O grach\", 2324], [\"Opieka nad dzieckiem\", 2342], [\"Pan i Sługa\", 2770], [\"Panty shots\", 2365], [\"Piłka nożna\", 32], [\"Pociągi\", 2370], [\"Podróże w czasie\", 2731], [\"Przemoc\", 1736], [\"Reinkarnacja\", 2367], [\"Rolnictwo\", 2331], [\"Samochody\", 47], [\"Samorząd uczniowski\", 2411], [\"Seks\", 1786], [\"Siatkówka\", 2216], [\"Spisek\", 2344], [\"Strzelaniny\", 2352], [\"Supermoce\", 58], [\"Taniec\", 2318], [\"Tatuaże\", 2750], [\"Tenis\", 66], [\"Trójkąt miłosny\", 1743], [\"Walka wręcz\", 2353], [\"Wątek romantyczny\", 2674], [\"Wojna\", 1962], [\"Wykorzystywanie seksualne\", 2368], [\"Wyraźny seks\", 2349], [\"Wyścigi Samochodowe\", 1903], [\"Yakuza\", 1089], [\"Zaaranżowany związek\", 2337], [\"Zamiana ciałami\", 1732], [\"Zemsta\", 2145], [\"Znęcanie nad zwierzętami\", 2334], [\"Znęcanie się\", 2340], [\"Życie pośmiertne\", 2330], [\"Łucznictwo\", 2335], [\"Łyżwiarstwo\", 2153]];\nconst origin = [[\"Anime\", 2314], [\"Gra komputerowa\", 193], [\"Gry (inne)\", 2323], [\"Inne\", 2410], [\"Karcianka\", 2016], [\"Książka\", 2029], [\"Light novel\", 1976], [\"Manga\", 1956], [\"Manga 4-koma\", 1996], [\"Novel\", 2127], [\"Seria oryginalna\", 1966], [\"Visual novel\", 1990], [\"Web manga\", 2025]];\nconst tagMap = new Map([\n    ...genres,\n    ...target,\n    ...characters,\n    ...time_place,\n    ...other,\n    ...origin,\n]);\nexport const tagToId = (input) => tagMap.get(input);\n","import { scrapeSearchShinden } from \"./search\";\nimport { tagToId } from \"./tags\";\nexport async function advancedSearchShinden(options, query) {\n    let url = \"https://shinden.pl/series?genres-type=all&genres=\";\n    if (options) {\n        if (options.tags) {\n            const include = [];\n            const exclude = [];\n            Object.values(options.tags)\n                .map(i => {\n                const { include: _include, exclude: _exclude } = i;\n                if (_include)\n                    _include.forEach((tag) => include.push(tagToId(tag) || -1));\n                if (_exclude)\n                    _exclude.forEach((tag) => exclude.push(tagToId(tag) || -1));\n            });\n            include.filter(i => i >= 0);\n            exclude.filter(i => i >= 0);\n            url += include.map(i => \"i\" + i).join(\"%3B\");\n            if (exclude.length > 0)\n                url += \"%3B\";\n            url += exclude.map(i => \"e\" + i).join(\"%3B\");\n        }\n        if (options.date) {\n            if (options.date.precision)\n                url += \"&start_date_precision=\" + options.date.precision;\n            if (options.date.from)\n                url += \"&year_from=\" + options.date.from;\n            if (options.date.to)\n                url += \"&year_top=\" + options.date.to;\n        }\n        if (options.type) {\n            url += options.type.reduce((acc, v, index) => acc += `&series_type[${index}]=${v}`, \"\");\n        }\n        if (options.status) {\n            url += options.status.reduce((acc, v, index) => acc += `&series_status[[${index}]=${v.replace(/\\s/g, \"+\")}`, \"\");\n        }\n        if (options.episodeLength) {\n            const { min, max } = options.episodeLength;\n            const paramArray = [\"less_7\", \"7_to_18\", \"19_to_27\", \"28_to_48\", \"over_48\"];\n            const lenArray = [[0, 7], [7, 18], [19, 27], [28, 48], [48, 999]];\n            const testMinArray = [];\n            const testMaxArray = [];\n            lenArray.forEach(i => {\n                testMinArray.push(Math.abs(min - i[0]));\n                testMaxArray.push(Math.abs(max - i[1]));\n            });\n            const minIndex = testMinArray.indexOf(Math.min(...testMinArray));\n            const maxIndex = testMaxArray.indexOf(Math.min(...testMaxArray));\n            for (let i = minIndex; i <= maxIndex; i++) {\n                url += `&series_length[${i - minIndex}]=${paramArray[i]}`;\n            }\n        }\n        if (options.numberOfEpisodes) {\n            const { min, max } = options.numberOfEpisodes;\n            url += `&series_number[0]=${min}_to_${max}`;\n            url += `&series_number_from=${min}`;\n            url += `&series_number_to=${max}`;\n        }\n        if (options.letter)\n            url += `&page=${options.letter}`;\n        if (options.title)\n            url += `&type=${options.title}`;\n        if (options.sort) {\n            url += `&sort_by=`;\n            switch (options.sort.by) {\n                case \"type\":\n                    url += \"type\";\n                    break;\n                case \"episodes\":\n                    url += \"multimedia\";\n                    break;\n                case \"status\":\n                    url += \"%3Fsort_by%3Dstatus\";\n                    break;\n                case \"rating\":\n                    url += \"ranking-rate\";\n                    break;\n            }\n            if (options.sort.order === \"Ascending\")\n                url += \"&sort_order=asc\";\n            else\n                url += \"&sort_order=desc\";\n        }\n        if (options.page)\n            url += `&page=${options.page}`;\n    }\n    if (query)\n        url += `&search=${query}`;\n    return scrapeSearchShinden(url);\n}\n","import { load } from \"cheerio\";\nimport { getMonthNamePl } from \"../utils/date\";\nimport { fetchFromShinden } from \"../utils/fetch\";\nimport { mpaaToAgeGroup } from \"../utils/mpaa\";\nimport noImageDetector, { areTagsNsfw, fixImageUrl } from \"../utils/no_image_detector\";\nimport parseNumber from \"../utils/parse_number\";\nexport async function scrapeAnimeInfoShinden(url) {\n    const html = await fetchFromShinden(`https://shinden.pl${url}`);\n    const $ = load(html);\n    const tags = {\n        genres: [],\n        target: [],\n        characters: [],\n        time_place: [],\n        origin: [],\n        other: []\n    };\n    $(\".info-top-table-highlight\").find(\".tags\").each(function () {\n        const $item = $(this);\n        const _tags = $item.parent().parent().before().text().trim().split(/\\n+\\s?/);\n        const category = _tags.shift();\n        switch (category) {\n            case \"Gatunki:\":\n                tags.genres = [..._tags];\n                break;\n            case \"Grupy docelowe:\":\n                tags.target = [..._tags];\n                break;\n            case \"Rodzaje postaci:\":\n                tags.characters = [..._tags];\n                break;\n            case \"Miejsce i czas:\":\n                tags.time_place = [..._tags];\n                break;\n            case \"Pierwowzór:\":\n                tags.origin = [..._tags];\n                break;\n            case \"Pozostałe tagi:\":\n                tags.other = [..._tags];\n                break;\n            default: return;\n        }\n    });\n    const rating = {\n        overall: parseNumber($(\".info-aside-rating-user\").text()),\n        plot: 0,\n        art: 0,\n        music: 0,\n        characters: 0\n    };\n    $(\".info-aside-overall-rating>li\")\n        .each(function () {\n        const $item = $(this);\n        const [grade_string] = $item.text().match(/[\\d,]+/) || [\"\"];\n        const grade_number = parseNumber(grade_string);\n        const _title = $item.find(\"span\").text();\n        switch (_title) {\n            case \"Fabuła\":\n                rating.plot = grade_number;\n                break;\n            case \"Grafika\":\n                rating.art = grade_number;\n                break;\n            case \"Muzyka\":\n                rating.music = grade_number;\n                break;\n            case \"Postacie\":\n                rating.characters = grade_number;\n                break;\n            default: return;\n        }\n    });\n    const characters = [];\n    $(\".ch-st-list>div\").each(function () {\n        const $item = $(this);\n        characters.push({\n            link: $item.find(\".item-l h3>a\").attr(\"href\") || \"\",\n            name: $item.find(\".item-l h3>a\").text(),\n            image_url: noImageDetector($item.find(\"img\").attr(\"src\") || \"\"),\n            type: $item.find(\".item-l p\").text(),\n            vc: {\n                name: $item.find(\".item-r a\").text(),\n                country: $item.find(\".item-r p\").text(),\n                link: $item.find(\".item-r a.img\").attr(\"href\") || \"\",\n                image_url: noImageDetector($item.find(\".item-r a.img img\").attr(\"src\") || \"\"),\n            }\n        });\n    });\n    const cast = [];\n    $(\".person-list>div\").each(function () {\n        const $item = $(this);\n        cast.push({\n            image_url: noImageDetector($item.find(\"img\").attr(\"src\") || \"\"),\n            name: $item.find(\"h3>a\").text().trim(),\n            description: $item.find(\"p\").text().trim(),\n        });\n    });\n    const info_map = new Map();\n    let i = 0;\n    let last_info;\n    $(\"dl.info-aside-list\").children().each(function () {\n        const $item = $(this);\n        const caption = $item.text().trim();\n        i = (i + 1) % 2;\n        if (i === 1) {\n            switch (caption) {\n                case \"Typ:\":\n                    last_info = \"type\";\n                    break;\n                case \"Status:\":\n                    last_info = \"status\";\n                    break;\n                case \"Koniec emisji:\":\n                    last_info = \"air_date\";\n                    break;\n                case \"Liczba odcinków:\":\n                    last_info = \"episodes\";\n                    break;\n                case \"Studio:\":\n                    last_info = \"studios\";\n                    break;\n                case \"Długość odcinka:\":\n                    last_info = \"episde_length\";\n                    break;\n                case \"MPAA:\":\n                    last_info = \"mpaa\";\n                    break;\n                default: last_info = \"\";\n            }\n        }\n        else {\n            switch (last_info) {\n                case \"\": return;\n                case \"episodes\":\n                    info_map.set(last_info, parseNumber(caption));\n                    break;\n                case \"mpaa\":\n                    info_map.set(last_info, mpaaToAgeGroup(caption));\n                    break;\n                case \"air_date\":\n                    {\n                        const [, month, year] = caption.split(\".\");\n                        const month_str = getMonthNamePl(parseInt(month));\n                        info_map.set(last_info, `${month_str} ${year}`);\n                        info_map.set(\"full_date\", caption);\n                    }\n                    ;\n                    break;\n                case \"studios\":\n                    {\n                        const arr = [];\n                        $item.children().each(function () {\n                            const $item = $(this);\n                            arr.push({\n                                name: $item.text(),\n                                link: $item.attr(\"href\") || \"\",\n                            });\n                        });\n                        info_map.set(last_info, arr);\n                    }\n                    break;\n                default: info_map.set(last_info, caption);\n            }\n        }\n    });\n    const info = Object.fromEntries(info_map.entries());\n    const related = [];\n    $(\".relation_t2t\").each(function () {\n        const $item = $(this);\n        const link = $item.find(\"a\").attr(\"href\") || \"\";\n        let title = link\n            .replace(/\\D+\\d+-/g, \"\")\n            .replace(/-/g, \" \")\n            .split(\" \")\n            .map(i => i.substring(0, 1).toUpperCase() + i.substring(1))\n            .join(\" \");\n        const [, md, t] = $item.text().split(\"\\n\").filter(i => i);\n        related.push({\n            title, link,\n            image_url: noImageDetector($item.find(\"img\").attr(\"src\") || \"\"),\n            media: md || \"\",\n            type: t || \"\"\n        });\n    });\n    const title = $(\"span.title\").text();\n    let image_url = noImageDetector($(\"img.info-aside-img\").attr(\"src\") || \"\");\n    const nsfw = areTagsNsfw(tags.genres);\n    image_url = await fixImageUrl(image_url, title, nsfw);\n    return {\n        title,\n        full_title: $(\".title-other\").text().replace(/[\\n]/g, \" \").trim().replace(/[,-;]$/, \"\"),\n        image_url,\n        related,\n        description: $(\"meta[name='description']\").attr(\"content\")?.trim() || \"\",\n        tags, rating, characters, cast, info\n    };\n}\n","export function mpaaToAgeGroup(input) {\n    switch (input.toUpperCase()) {\n        case \"G\": return \"All\";\n        case \"PG\": return \"7+\";\n        case \"PG-13\": return \"13+\";\n        case \"R\":\n        case \"R+\": return \"16+\";\n        case \"NC-17\":\n        case \"RY\": return \"18+\";\n    }\n}\n","export function getMonthNamePl(input) {\n    switch (input) {\n        case 1: return \"Styczeń\";\n        case 2: return \"Luty\";\n        case 3: return \"Marzec\";\n        case 4: return \"Kwiecień\";\n        case 5: return \"Maj\";\n        case 6: return \"Czerwiec\";\n        case 7: return \"Lipiec\";\n        case 8: return \"Sierpień\";\n        case 9: return \"Wrzesień\";\n        case 10: return \"Październik\";\n        case 11: return \"Listopad\";\n        case 12: return \"Grudzień\";\n    }\n}\n","import { load } from \"cheerio\";\nimport { fetchFromShinden } from \"../utils/fetch\";\nexport async function scrapeAllEpisodesShinden(link) {\n    const html = await fetchFromShinden(`https://shinden.pl${link}/episodes`);\n    const index1 = html.indexOf(\"table\");\n    const index2 = html.lastIndexOf(\"/table\");\n    const $ = load(html.substring(index1 - 6, index2 + 7));\n    const list = [];\n    $(\".list-episode-checkboxes>tr\").each(function () {\n        const $item = $(this);\n        list.push({\n            link: $item.find(\"a\").attr(\"href\") || \"\",\n            name: $item.find(\".ep-title\").text(),\n            date: $item.find(\".ep-date\").text(),\n            id: parseInt($item.find(\"td:nth-child(1)\").text()),\n            lang: $item.find(\".flag-icon\").parent().html()?.match(/(?<=title=\").+(?=\">)/g) || [],\n            avaiable: !!$item.find(\"i\").attr(\"class\")?.includes(\"fa-check\")\n        });\n    });\n    list.sort((a, b) => a.id - b.id);\n    return list;\n}\n","import { load } from \"cheerio\";\nimport { fetchFromShinden } from \"../utils/fetch\";\nexport async function scrapeVideoPlayerIdsShinden(link) {\n    const html = await fetchFromShinden(`https://shinden.pl${link}`);\n    const index1 = html.indexOf(\"episode-player-list\");\n    const index2 = html.lastIndexOf(\"player-navigator-section box\");\n    const $ = load(html.substring(index1 - 20, index2 - 17));\n    const list = [];\n    $(\"tbody >tr\").each(function () {\n        const $item = $(this);\n        list.push({\n            source: $item.find(\".ep-pl-name\").text(),\n            quality: $item.find(\".ep-pl-res\").text(),\n            dub_lang: $item.find(\".ep-pl-alang\").text().replace(/\\s/g, \"\"),\n            sub_lang: $item.find(\".ep-pl-slang\").text().replace(/\\s/g, \"\"),\n            id: $item.find(\".ep-buttons a\").attr(\"id\")?.replace(/player_data_/, \"\") || \"\"\n        });\n    });\n    return list;\n}\n","import { scrapeSearchShinden } from \"./search\";\nexport async function searchShinden(query) {\n    return scrapeSearchShinden(\"https://shinden.pl/series?search=\" + encodeURIComponent(query));\n}\n","import request from \"request\";\nimport { waitFor } from \"../utils/wait\";\nconst cookieJar = request.jar();\nconst auth = \"X2d1ZXN0XzowLDUsMjEwMDAwMDAsMjU1LDQxNzQyOTM2NDQ%3D\";\nconst headers = {\n    \"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n    \"accept-language\": \"pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7\",\n    \"cache-control\": \"max-age=0\",\n    \"referer\": \"https://shinden.pl/\",\n    \"sec-fetch-dest\": \"document\",\n    \"sec-fetch-mode\": \"navigate\",\n    \"sec-fetch-site\": \"same-origin\",\n    \"sec-fetch-user\": \"?1\",\n    \"sec-gpc\": \"1\",\n    \"upgrade-insecure-requests\": \"1\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36\"\n};\nexport async function getVideoLinkShinden(playerID) {\n    const url1 = `https://api4.shinden.pl/xhr/${playerID}/player_load?auth=${auth}`;\n    const url2 = `https://api4.shinden.pl/xhr/${playerID}/player_show?auth=${auth}&width=0&height=-1`;\n    return new Promise(resolve => {\n        request.get({\n            url: url1,\n            method: \"GET\",\n            jar: cookieJar,\n            headers\n        }, async () => {\n            await waitFor(5000);\n            request.get({\n                url: url2,\n                method: \"GET\",\n                jar: cookieJar,\n                headers\n            }, (_, __, body) => {\n                const [iframe] = body.match(/<iframe[\\s\\S]+<\\/iframe>/) || [\"\"];\n                resolve(iframe);\n            });\n        });\n    });\n}\n","export async function waitFor(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n"],"names":["headers","Accept","Cookie","async","fetchFromShinden","url","response","fetch","ok","Error","statusText","text","noImageDetector","includes","areTagsNsfw","tags","map","t","toUpperCase","some","fixImageUrl","image_url","title","nsfw","term","res","html","load","$","attr","replace","searchImageMal","parseNumber","input","str","n","parseFloat","isNaN","scrapeSearchShinden","index","indexOf","index2","lastIndexOf","substring","promiseArray","each","$item","this","push","Promise","resolve","find","split","filter","i","link","type","episodes","grade","all","tagMap","Map","tagToId","get","advancedSearchShinden","options","query","include","exclude","Object","values","_include","_exclude","forEach","tag","join","length","date","precision","from","to","reduce","acc","v","status","episodeLength","min","max","paramArray","testMinArray","testMaxArray","Math","abs","minIndex","maxIndex","numberOfEpisodes","letter","sort","by","order","page","scrapeAnimeInfoShinden","genres","target","characters","time_place","origin","other","_tags","parent","before","trim","shift","rating","overall","plot","art","music","grade_string","match","grade_number","name","vc","country","cast","description","info_map","last_info","children","caption","set","mpaaToAgeGroup","month","year","month_str","getMonthNamePl","parseInt","arr","info","fromEntries","entries","related","md","media","full_title","scrapeAllEpisodesShinden","index1","list","id","lang","avaiable","a","b","scrapeVideoPlayerIdsShinden","source","quality","dub_lang","sub_lang","searchShinden","encodeURIComponent","cookieJar","request","jar","auth","accept","referer","getVideoLinkShinden","playerID","url1","url2","method","ms","setTimeout","waitFor","_","__","body","iframe"],"mappings":"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"}